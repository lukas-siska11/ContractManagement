// <auto-generated />
using System;
using ContractManagement.Infrastructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace ContractManagement.Infrastructure.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20210720194137_DummyData")]
    partial class DummyData
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.8")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ContractManagement.Domain.Entities.Clients.Client", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Age")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PersonalIdentificationNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Clients");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            Age = 30,
                            CreatedDate = new DateTime(2021, 7, 20, 21, 41, 37, 425, DateTimeKind.Local).AddTicks(9518),
                            Email = "novak@seznam.cz",
                            Name = "Jan",
                            PersonalIdentificationNumber = "870928/1234",
                            Phone = "+420777888001",
                            Surname = "Novák"
                        },
                        new
                        {
                            ID = 2,
                            Age = 20,
                            CreatedDate = new DateTime(2021, 7, 20, 21, 41, 37, 425, DateTimeKind.Local).AddTicks(9636),
                            Email = "pekny@seznam.cz",
                            Name = "Petr",
                            PersonalIdentificationNumber = "990728/4567",
                            Phone = "+420777888002",
                            Surname = "Pěkný"
                        },
                        new
                        {
                            ID = 3,
                            Age = 23,
                            CreatedDate = new DateTime(2021, 7, 20, 21, 41, 37, 425, DateTimeKind.Local).AddTicks(9642),
                            Email = "pospisil@gmail.com",
                            Name = "Pavel",
                            PersonalIdentificationNumber = "971020/8907",
                            Phone = "+420777888003",
                            Surname = "Pospíšil"
                        },
                        new
                        {
                            ID = 4,
                            Age = 33,
                            CreatedDate = new DateTime(2021, 7, 20, 21, 41, 37, 425, DateTimeKind.Local).AddTicks(9646),
                            Email = "doloman@seznam.cz",
                            Name = "Lukáš",
                            PersonalIdentificationNumber = "781304/1234",
                            Phone = "+420777888004",
                            Surname = "Doloman"
                        },
                        new
                        {
                            ID = 5,
                            Age = 50,
                            CreatedDate = new DateTime(2021, 7, 20, 21, 41, 37, 425, DateTimeKind.Local).AddTicks(9650),
                            Email = "vetrova@email.cz",
                            Name = "Jana",
                            PersonalIdentificationNumber = "890920/4456",
                            Phone = "+420777888005",
                            Surname = "Větrová"
                        },
                        new
                        {
                            ID = 6,
                            Age = 39,
                            CreatedDate = new DateTime(2021, 7, 20, 21, 41, 37, 425, DateTimeKind.Local).AddTicks(9653),
                            Email = "povedomy@outlook.cz",
                            Name = "Michal",
                            PersonalIdentificationNumber = "670608/7890",
                            Phone = "+420777888006",
                            Surname = "Povědomý"
                        },
                        new
                        {
                            ID = 7,
                            Age = 36,
                            CreatedDate = new DateTime(2021, 7, 20, 21, 41, 37, 425, DateTimeKind.Local).AddTicks(9657),
                            Email = "usmevava@seznam.cz",
                            Name = "Dana",
                            PersonalIdentificationNumber = "891313/6789",
                            Phone = "+420777888007",
                            Surname = "Usměvavá"
                        },
                        new
                        {
                            ID = 8,
                            Age = 23,
                            CreatedDate = new DateTime(2021, 7, 20, 21, 41, 37, 425, DateTimeKind.Local).AddTicks(9660),
                            Email = "nadherna@seznam.cz",
                            Name = "Diana",
                            PersonalIdentificationNumber = "900709/5677",
                            Phone = "+420777888008",
                            Surname = "Nádherná"
                        },
                        new
                        {
                            ID = 9,
                            Age = 38,
                            CreatedDate = new DateTime(2021, 7, 20, 21, 41, 37, 425, DateTimeKind.Local).AddTicks(9665),
                            Email = "polna@seznam.cz",
                            Name = "Věra",
                            PersonalIdentificationNumber = "670309/6707",
                            Phone = "+420777888009",
                            Surname = "Polná"
                        },
                        new
                        {
                            ID = 10,
                            Age = 36,
                            CreatedDate = new DateTime(2021, 7, 20, 21, 41, 37, 425, DateTimeKind.Local).AddTicks(9668),
                            Email = "tmava@seznam.cz",
                            Name = "Kristýna",
                            PersonalIdentificationNumber = "980909/9090",
                            Phone = "+420777888010",
                            Surname = "Tmavá"
                        },
                        new
                        {
                            ID = 11,
                            Age = 45,
                            CreatedDate = new DateTime(2021, 7, 20, 21, 41, 37, 425, DateTimeKind.Local).AddTicks(9672),
                            Email = "sysel@gmail.com",
                            Name = "Tomáš",
                            PersonalIdentificationNumber = "021809/7899",
                            Phone = "+420777888011",
                            Surname = "Sysel"
                        },
                        new
                        {
                            ID = 12,
                            Age = 66,
                            CreatedDate = new DateTime(2021, 7, 20, 21, 41, 37, 425, DateTimeKind.Local).AddTicks(9676),
                            Email = "rychly@centrum.cz",
                            Name = "Petr",
                            PersonalIdentificationNumber = "031516/5667",
                            Phone = "+420777888012",
                            Surname = "Rychlý"
                        },
                        new
                        {
                            ID = 13,
                            Age = 47,
                            CreatedDate = new DateTime(2021, 7, 20, 21, 41, 37, 425, DateTimeKind.Local).AddTicks(9679),
                            Email = "schic@seznam.cz",
                            Name = "Michal",
                            PersonalIdentificationNumber = "900909/8009",
                            Phone = "+420777888013",
                            Surname = "Schick"
                        },
                        new
                        {
                            ID = 14,
                            Age = 34,
                            CreatedDate = new DateTime(2021, 7, 20, 21, 41, 37, 425, DateTimeKind.Local).AddTicks(9683),
                            Email = "osma@seznam.cz",
                            Name = "Martina",
                            PersonalIdentificationNumber = "890605/7558",
                            Phone = "+420777888014",
                            Surname = "Osmá"
                        },
                        new
                        {
                            ID = 15,
                            Age = 47,
                            CreatedDate = new DateTime(2021, 7, 20, 21, 41, 37, 425, DateTimeKind.Local).AddTicks(9688),
                            Email = "semerad@gmail.com",
                            Name = "Martin",
                            PersonalIdentificationNumber = "990907/7899",
                            Phone = "+420777888015",
                            Surname = "Semerád"
                        },
                        new
                        {
                            ID = 16,
                            Age = 35,
                            CreatedDate = new DateTime(2021, 7, 20, 21, 41, 37, 425, DateTimeKind.Local).AddTicks(9692),
                            Email = "slima@seznam.cz",
                            Name = "Jan",
                            PersonalIdentificationNumber = "880906/8880",
                            Phone = "+420777888016",
                            Surname = "Slimák"
                        },
                        new
                        {
                            ID = 17,
                            Age = 45,
                            CreatedDate = new DateTime(2021, 7, 20, 21, 41, 37, 425, DateTimeKind.Local).AddTicks(9695),
                            Email = "dockal@seznam.cz",
                            Name = "Filip",
                            PersonalIdentificationNumber = "760506/7878",
                            Phone = "+420777888017",
                            Surname = "Dočkal"
                        },
                        new
                        {
                            ID = 18,
                            Age = 78,
                            CreatedDate = new DateTime(2021, 7, 20, 21, 41, 37, 425, DateTimeKind.Local).AddTicks(9699),
                            Email = "vsetecny@seznam.cz",
                            Name = "Roman",
                            PersonalIdentificationNumber = "870102/9902",
                            Phone = "+420777888018",
                            Surname = "Všetečný"
                        },
                        new
                        {
                            ID = 19,
                            Age = 20,
                            CreatedDate = new DateTime(2021, 7, 20, 21, 41, 37, 425, DateTimeKind.Local).AddTicks(9703),
                            Email = "narocny@seznam.cz",
                            Name = "Pavel",
                            PersonalIdentificationNumber = "901212/4829",
                            Phone = "+420777888019",
                            Surname = "Náročný"
                        },
                        new
                        {
                            ID = 20,
                            Age = 18,
                            CreatedDate = new DateTime(2021, 7, 20, 21, 41, 37, 425, DateTimeKind.Local).AddTicks(9706),
                            Email = "vyoral@seznam.cz",
                            Name = "Petr",
                            PersonalIdentificationNumber = "910708/9899",
                            Phone = "+420777888020",
                            Surname = "Vyoral"
                        });
                });

            modelBuilder.Entity("ContractManagement.Domain.Entities.Consultants.Consultant", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Age")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PersonalIdentificationNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Consultants");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            Age = 30,
                            CreatedDate = new DateTime(2021, 7, 20, 21, 41, 37, 426, DateTimeKind.Local).AddTicks(215),
                            Email = "novak@seznam.cz",
                            Name = "Jan",
                            PersonalIdentificationNumber = "870928/1234",
                            Phone = "+420777888001",
                            Surname = "Novák"
                        },
                        new
                        {
                            ID = 2,
                            Age = 20,
                            CreatedDate = new DateTime(2021, 7, 20, 21, 41, 37, 426, DateTimeKind.Local).AddTicks(246),
                            Email = "pekny@seznam.cz",
                            Name = "Petr",
                            PersonalIdentificationNumber = "990728/4567",
                            Phone = "+420777888002",
                            Surname = "Pěkný"
                        },
                        new
                        {
                            ID = 3,
                            Age = 23,
                            CreatedDate = new DateTime(2021, 7, 20, 21, 41, 37, 426, DateTimeKind.Local).AddTicks(250),
                            Email = "pospisil@gmail.com",
                            Name = "Pavel",
                            PersonalIdentificationNumber = "971020/8907",
                            Phone = "+420777888003",
                            Surname = "Pospíšil"
                        },
                        new
                        {
                            ID = 4,
                            Age = 35,
                            CreatedDate = new DateTime(2021, 7, 20, 21, 41, 37, 426, DateTimeKind.Local).AddTicks(254),
                            Email = "slima@seznam.cz",
                            Name = "Jan",
                            PersonalIdentificationNumber = "880906/8880",
                            Phone = "+420777888016",
                            Surname = "Slimák"
                        },
                        new
                        {
                            ID = 5,
                            Age = 45,
                            CreatedDate = new DateTime(2021, 7, 20, 21, 41, 37, 426, DateTimeKind.Local).AddTicks(258),
                            Email = "dockal@seznam.cz",
                            Name = "Filip",
                            PersonalIdentificationNumber = "760506/7878",
                            Phone = "+420777888017",
                            Surname = "Dočkal"
                        },
                        new
                        {
                            ID = 6,
                            Age = 78,
                            CreatedDate = new DateTime(2021, 7, 20, 21, 41, 37, 426, DateTimeKind.Local).AddTicks(261),
                            Email = "vsetecny@seznam.cz",
                            Name = "Roman",
                            PersonalIdentificationNumber = "870102/9902",
                            Phone = "+420777888018",
                            Surname = "Všetečný"
                        },
                        new
                        {
                            ID = 7,
                            Age = 20,
                            CreatedDate = new DateTime(2021, 7, 20, 21, 41, 37, 426, DateTimeKind.Local).AddTicks(265),
                            Email = "narocny@seznam.cz",
                            Name = "Pavel",
                            PersonalIdentificationNumber = "901212/4829",
                            Phone = "+420777888019",
                            Surname = "Náročný"
                        });
                });

            modelBuilder.Entity("ContractManagement.Domain.Entities.Contracts.Contract", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AdministratorID")
                        .HasColumnType("int");

                    b.Property<int>("ClientID")
                        .HasColumnType("int");

                    b.Property<DateTime>("ConclusionDate")
                        .HasColumnType("date");

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2");

                    b.Property<int>("InstitutionID")
                        .HasColumnType("int");

                    b.Property<string>("RegistrationNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("TerminationDate")
                        .HasColumnType("date");

                    b.Property<DateTime>("ValidFromDate")
                        .HasColumnType("date");

                    b.HasKey("ID");

                    b.HasIndex("AdministratorID");

                    b.HasIndex("ClientID");

                    b.HasIndex("InstitutionID");

                    b.ToTable("Contracts");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            AdministratorID = 7,
                            ClientID = 1,
                            ConclusionDate = new DateTime(2021, 7, 20, 21, 41, 37, 426, DateTimeKind.Local).AddTicks(1602),
                            CreatedDate = new DateTime(2021, 7, 20, 21, 41, 37, 426, DateTimeKind.Local).AddTicks(2430),
                            InstitutionID = 1,
                            RegistrationNumber = "68768768",
                            TerminationDate = new DateTime(2021, 7, 20, 21, 41, 37, 426, DateTimeKind.Local).AddTicks(2170),
                            ValidFromDate = new DateTime(2021, 7, 20, 21, 41, 37, 426, DateTimeKind.Local).AddTicks(1902)
                        },
                        new
                        {
                            ID = 2,
                            AdministratorID = 6,
                            ClientID = 2,
                            ConclusionDate = new DateTime(2021, 7, 20, 21, 41, 37, 426, DateTimeKind.Local).AddTicks(2486),
                            CreatedDate = new DateTime(2021, 7, 20, 21, 41, 37, 426, DateTimeKind.Local).AddTicks(2526),
                            InstitutionID = 2,
                            RegistrationNumber = "34567899",
                            TerminationDate = new DateTime(2021, 7, 20, 21, 41, 37, 426, DateTimeKind.Local).AddTicks(2516),
                            ValidFromDate = new DateTime(2021, 7, 20, 21, 41, 37, 426, DateTimeKind.Local).AddTicks(2496)
                        },
                        new
                        {
                            ID = 3,
                            AdministratorID = 5,
                            ClientID = 3,
                            ConclusionDate = new DateTime(2021, 7, 20, 21, 41, 37, 426, DateTimeKind.Local).AddTicks(2530),
                            CreatedDate = new DateTime(2021, 7, 20, 21, 41, 37, 426, DateTimeKind.Local).AddTicks(2539),
                            InstitutionID = 2,
                            RegistrationNumber = "87964775",
                            TerminationDate = new DateTime(2021, 7, 20, 21, 41, 37, 426, DateTimeKind.Local).AddTicks(2536),
                            ValidFromDate = new DateTime(2021, 7, 20, 21, 41, 37, 426, DateTimeKind.Local).AddTicks(2533)
                        },
                        new
                        {
                            ID = 4,
                            AdministratorID = 4,
                            ClientID = 4,
                            ConclusionDate = new DateTime(2021, 7, 20, 21, 41, 37, 426, DateTimeKind.Local).AddTicks(2543),
                            CreatedDate = new DateTime(2021, 7, 20, 21, 41, 37, 426, DateTimeKind.Local).AddTicks(2552),
                            InstitutionID = 1,
                            RegistrationNumber = "98908054",
                            TerminationDate = new DateTime(2021, 7, 20, 21, 41, 37, 426, DateTimeKind.Local).AddTicks(2549),
                            ValidFromDate = new DateTime(2021, 7, 20, 21, 41, 37, 426, DateTimeKind.Local).AddTicks(2546)
                        },
                        new
                        {
                            ID = 5,
                            AdministratorID = 3,
                            ClientID = 5,
                            ConclusionDate = new DateTime(2021, 7, 20, 21, 41, 37, 426, DateTimeKind.Local).AddTicks(2555),
                            CreatedDate = new DateTime(2021, 7, 20, 21, 41, 37, 426, DateTimeKind.Local).AddTicks(2564),
                            InstitutionID = 3,
                            RegistrationNumber = "45786436",
                            TerminationDate = new DateTime(2021, 7, 20, 21, 41, 37, 426, DateTimeKind.Local).AddTicks(2561),
                            ValidFromDate = new DateTime(2021, 7, 20, 21, 41, 37, 426, DateTimeKind.Local).AddTicks(2558)
                        },
                        new
                        {
                            ID = 6,
                            AdministratorID = 2,
                            ClientID = 6,
                            ConclusionDate = new DateTime(2021, 7, 20, 21, 41, 37, 426, DateTimeKind.Local).AddTicks(2567),
                            CreatedDate = new DateTime(2021, 7, 20, 21, 41, 37, 426, DateTimeKind.Local).AddTicks(2576),
                            InstitutionID = 1,
                            RegistrationNumber = "68986545",
                            TerminationDate = new DateTime(2021, 7, 20, 21, 41, 37, 426, DateTimeKind.Local).AddTicks(2573),
                            ValidFromDate = new DateTime(2021, 7, 20, 21, 41, 37, 426, DateTimeKind.Local).AddTicks(2570)
                        });
                });

            modelBuilder.Entity("ContractManagement.Domain.Entities.Contracts.ContractConsultants", b =>
                {
                    b.Property<int>("ConsultantID")
                        .HasColumnType("int");

                    b.Property<int>("ContractID")
                        .HasColumnType("int");

                    b.HasKey("ConsultantID", "ContractID");

                    b.HasIndex("ContractID");

                    b.ToTable("ContractConsultants");

                    b.HasData(
                        new
                        {
                            ConsultantID = 7,
                            ContractID = 1
                        },
                        new
                        {
                            ConsultantID = 6,
                            ContractID = 1
                        },
                        new
                        {
                            ConsultantID = 5,
                            ContractID = 1
                        },
                        new
                        {
                            ConsultantID = 6,
                            ContractID = 2
                        },
                        new
                        {
                            ConsultantID = 3,
                            ContractID = 2
                        },
                        new
                        {
                            ConsultantID = 5,
                            ContractID = 3
                        },
                        new
                        {
                            ConsultantID = 4,
                            ContractID = 4
                        },
                        new
                        {
                            ConsultantID = 3,
                            ContractID = 4
                        },
                        new
                        {
                            ConsultantID = 2,
                            ContractID = 4
                        },
                        new
                        {
                            ConsultantID = 1,
                            ContractID = 4
                        },
                        new
                        {
                            ConsultantID = 3,
                            ContractID = 5
                        },
                        new
                        {
                            ConsultantID = 7,
                            ContractID = 5
                        },
                        new
                        {
                            ConsultantID = 2,
                            ContractID = 6
                        },
                        new
                        {
                            ConsultantID = 1,
                            ContractID = 6
                        },
                        new
                        {
                            ConsultantID = 6,
                            ContractID = 6
                        });
                });

            modelBuilder.Entity("ContractManagement.Domain.Entities.Institutions.Institution", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Institutions");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            CreatedDate = new DateTime(2021, 7, 20, 21, 41, 37, 421, DateTimeKind.Local).AddTicks(9079),
                            Name = "AEGON"
                        },
                        new
                        {
                            ID = 2,
                            CreatedDate = new DateTime(2021, 7, 20, 21, 41, 37, 424, DateTimeKind.Local).AddTicks(7107),
                            Name = "Axa"
                        },
                        new
                        {
                            ID = 3,
                            CreatedDate = new DateTime(2021, 7, 20, 21, 41, 37, 424, DateTimeKind.Local).AddTicks(7150),
                            Name = "ČSOB"
                        });
                });

            modelBuilder.Entity("ContractManagement.Infrastructure.Identity.Roles.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles");
                });

            modelBuilder.Entity("ContractManagement.Infrastructure.Identity.Users.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<int>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<int>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<int>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<int>", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<int>", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens");
                });

            modelBuilder.Entity("ContractManagement.Domain.Entities.Contracts.Contract", b =>
                {
                    b.HasOne("ContractManagement.Domain.Entities.Consultants.Consultant", "Administrator")
                        .WithMany()
                        .HasForeignKey("AdministratorID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("ContractManagement.Domain.Entities.Clients.Client", "Client")
                        .WithMany()
                        .HasForeignKey("ClientID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("ContractManagement.Domain.Entities.Institutions.Institution", "Institution")
                        .WithMany()
                        .HasForeignKey("InstitutionID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Administrator");

                    b.Navigation("Client");

                    b.Navigation("Institution");
                });

            modelBuilder.Entity("ContractManagement.Domain.Entities.Contracts.ContractConsultants", b =>
                {
                    b.HasOne("ContractManagement.Domain.Entities.Consultants.Consultant", "Consultant")
                        .WithMany()
                        .HasForeignKey("ConsultantID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ContractManagement.Domain.Entities.Contracts.Contract", "Contract")
                        .WithMany()
                        .HasForeignKey("ContractID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Consultant");

                    b.Navigation("Contract");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<int>", b =>
                {
                    b.HasOne("ContractManagement.Infrastructure.Identity.Roles.Role", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<int>", b =>
                {
                    b.HasOne("ContractManagement.Infrastructure.Identity.Users.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<int>", b =>
                {
                    b.HasOne("ContractManagement.Infrastructure.Identity.Users.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<int>", b =>
                {
                    b.HasOne("ContractManagement.Infrastructure.Identity.Roles.Role", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ContractManagement.Infrastructure.Identity.Users.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<int>", b =>
                {
                    b.HasOne("ContractManagement.Infrastructure.Identity.Users.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
